plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
}

android {
    compileSdk 33
    defaultConfig {
        applicationId "com.androidspace.fusion"
        minSdk 26
        targetSdk 33

        versionCode Integer.parseInt(project.property("VERSION_CODE"))
        println "Version code:"+versionCode
        versionName project.property("VERSION_MAJOR")+"."+project.property("VERSION_MIDDLE")+"."+project.property("VERSION_MINOR")
        println "Vesion name:"+versionName

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    buildTypes {
        release {
            shrinkResources false
            minifyEnabled false
            buildConfigField 'String', 'BASE_URL', project.property('BASE_URL')
            buildConfigField 'String', 'PORTAL_URL', project.property('PORTAL_URL')
            resValue "string", "api_key", project.property('API_KEY')
            resValue "string", "license", project.property("LICENSE")
            buildConfigField "String", 'DONOR_MAP_ID', project.property('DONOR_MAP_ID')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            shrinkResources false
            minifyEnabled false
            buildConfigField 'String', 'BASE_URL', project.property('BASE_URL')
            buildConfigField 'String', 'PORTAL_URL', project.property('PORTAL_URL')
            resValue "string", "api_key", project.property('API_KEY')
            resValue "string", "license", project.property("LICENSE")
            buildConfigField "String", 'DONOR_MAP_ID', project.property('DONOR_MAP_ID')
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    packagingOptions {
        resources {
            excludes += ['META-INF/DEPENDENCIES']
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '11'
    }
    kotlin {
        jvmToolchain {
            languageVersion.set(JavaLanguageVersion.of("11"))
        }
    }
    dataBinding{
        enabled = true
    }
    buildFeatures {
        viewBinding true
    }
    kapt{
        correctErrorTypes true
    }
    lint {
        abortOnError false
        absolutePaths false
        baseline file('lint-baseline.xml')
        lintConfig file('lint.xml')
    }
    namespace 'com.androidspace.fusion'
}

dependencies {

    implementation "androidx.core:core-ktx:$xcore_version"
    implementation "androidx.appcompat:appcompat:$appcompat_version"
    implementation "com.google.android.material:material:$material_version"
    implementation "androidx.constraintlayout:constraintlayout:$cl_version"
    //implementation project(path: ':api')
    //implementation project(path: ':apiprocessor')
    //implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    //kapt project(':apiprocessor')


    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$live_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$live_version"

    implementation "androidx.navigation:navigation-runtime:$navigation_version"
    implementation "androidx.navigation:navigation-fragment:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-ui:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"

    implementation "org.koin:koin-android:$koin_version"
    implementation "org.koin:koin-androidx-ext:$koin_version"
    implementation "org.koin:koin-androidx-viewmodel:$koin_version"
    implementation "org.koin:koin-androidx-fragment:$koin_version"

    //implementation "com.esri.arcgisruntime:arcgis-android:$arcgis_version"
    implementation "com.esri:arcgis-maps-kotlin:$arcgis_version"

    implementation "com.squareup.okhttp3:logging-interceptor:$logging_version"
    implementation(platform("com.squareup.okhttp3:okhttp-bom:$okhttp_version"))

    implementation "com.squareup.retrofit2:retrofit:$retrofit_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit_version"

    implementation "androidx.room:room-ktx:$room_version"
    kapt "androidx.room:room-compiler:$room_version"

    implementation "androidx.camera:camera-core:$camerax_version"
    implementation "androidx.camera:camera-camera2:$camerax_version"
    implementation "androidx.camera:camera-lifecycle:$camerax_version"
    implementation "androidx.camera:camera-view:$camerax_version"
    implementation "androidx.camera:camera-video:$camerax_version"
    implementation "androidx.camera:camera-extensions:$camerax_version"
    //implementation "androidx.core:core-ktx:$camerax_version"

    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"

    implementation "androidx.biometric:biometric:$biometric_version"

    implementation "com.github.permissions-dispatcher:permissionsdispatcher:$permission_version"
    implementation 'androidx.legacy:legacy-support-v4:1.0.0'
    kapt "com.github.permissions-dispatcher:permissionsdispatcher-processor:$permission_version"

    implementation "com.isseiaoki:simplecropview:$cropview_version"

    implementation "de.hdodenhof:circleimageview:$circleview_version"

    implementation "com.github.barteksc:android-pdf-viewer:$pdfview_version"

    //implementation "com.caverock:androidsvg-aar:$svgview_version"

    implementation "com.squareup.picasso:picasso:$picasso"
    implementation "com.github.bumptech.glide:glide:$glide_version"
    annotationProcessor "com.github.bumptech.glide:compiler:$glide_version"

    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}